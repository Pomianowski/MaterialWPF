<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Window Navigation  -->
    <Style x:Key="CaptionButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        x:Name="LayoutRoot"
                        Width="44"
                        Height="30"
                        Background="{StaticResource ThemeColor}">
                        <TextBlock
                            x:Name="txt"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource Micon}"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="#999999"
                            RenderOptions.ClearTypeHint="Auto"
                            Text="{TemplateBinding Content}"
                            TextOptions.TextFormattingMode="Display"
                            TextOptions.TextRenderingMode="Aliased" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource ThemeElementHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MinimizeButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEDBE;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="MaximizeButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEADE;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="RestoreButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEAE2;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="CloseButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEADA;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <!--  Navigation  -->
    <Style x:Key="NavIcon" TargetType="{x:Type TextBlock}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="{StaticResource Micon}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style x:Key="NavButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource ThemeElementSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavImage" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="12,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        <!--<Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, ElementName=navigationButton, PresentationTraceSources.TraceLevel=High}" Value="True" />
                    <Condition Binding="{Binding Width, ElementName=navigationList, PresentationTraceSources.TraceLevel=High, UpdateSourceTrigger=PropertyChanged}" Value="44" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="OUT" />
                    <BeginStoryboard Name="IN">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="Margin">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="12,0,0,0" />
                                <SplineThicknessKeyFrame KeyTime="00:00:0.4" Value="-200,0,0,0" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, ElementName=navigationButton}" Value="True" />
                    <Condition Binding="{Binding ActualWidth, ElementName=navigationList}" Value="250" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="IN" />
                    <BeginStoryboard Name="OUT">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="Margin">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="-200,0,0,0" />
                                <SplineThicknessKeyFrame KeyTime="00:00:0.4" Value="12,0,0,0" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
        </Style.Triggers>-->
    </Style>

    <!--<Style x:Key="NavExpander" TargetType="{x:Type ItemsControl}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, ElementName=navigationButton, PresentationTraceSources.TraceLevel=High}" Value="True" />
                    <Condition Binding="{Binding Width, ElementName=navigationList, PresentationTraceSources.TraceLevel=High, UpdateSourceTrigger=PropertyChanged}" Value="44" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="OUT" />
                    <BeginStoryboard Name="IN">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Width"
                                To="250"
                                Duration="0:00:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseInOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, ElementName=navigationButton}" Value="True" />
                    <Condition Binding="{Binding ActualWidth, ElementName=navigationList}" Value="250" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="IN" />
                    <BeginStoryboard Name="OUT">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Width"
                                To="44"
                                Duration="0:00:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseInOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="NavHamburger" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        x:Name="LayoutRoot"
                        Width="44"
                        Height="44"
                        Background="Transparent">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="{StaticResource ThemeForeground}"
                            RenderOptions.ClearTypeHint="Auto"
                            Style="{StaticResource NavIcon}"
                            Text="&#xEBD8;"
                            TextOptions.TextFormattingMode="Ideal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource ThemeElementSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>