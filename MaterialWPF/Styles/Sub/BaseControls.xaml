<!--
    This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
    If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
    Copyright (C) Leszek Pomianowski and MaterialWPF Contributors.
    All Rights Reserved.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--
    <Style BasedOn="{StaticResource {x:Type Page}}" TargetType="{x:Type Page}">
        <Setter Property="Background" Value="Red" />
        <Setter Property="TextElement.FontWeight" Value="Regular" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
    </Style>
    -->

    <Style x:Key="MaterialFrameworkElement" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Control.FontSize" Value="13" />
        <Setter Property="Control.Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Control.Background" Value="{DynamicResource ThemeBackground}" />

        <Setter Property="TextElement.FontWeight" Value="Regular" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
    </Style>

    <!--  Controls  -->
    <Style
        x:Key="MaterialWindow"
        BasedOn="{StaticResource MaterialFrameworkElement}"
        TargetType="{x:Type Window}" />

    <Style
        x:Key="MaterialPage"
        BasedOn="{StaticResource MaterialFrameworkElement}"
        TargetType="{x:Type Page}" />

    <Style
        x:Key="MaterialNavigationWindow"
        BasedOn="{StaticResource MaterialFrameworkElement}"
        TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="MaxHeight" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Height}" />
        <Setter Property="MaxWidth" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width}" />
        <Setter Property="MinHeight" Value="450" />
        <Setter Property="MinWidth" Value="850" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="0"
                    CornerRadius="0"
                    GlassFrameThickness="0"
                    ResizeBorderThickness="6"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Interactive  -->
    <Style x:Key="MaterialIcon" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="FontFamily" Value="{StaticResource Micon}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
    </Style>

    <Style x:Key="MaterialButton" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="16,8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource ThemeInteractive}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeInteractiveBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThemeInteractiveHover}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ThemeInteractiveBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ThemeInteractiveDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaterialRoundedButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource ThemeInteractive}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeInteractiveBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThemeInteractiveHover}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ThemeInteractiveBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ThemeInteractiveDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaterialTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeInteractiveBorder}" />
        <Setter Property="Padding" Value="7" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ThemeInteractiveBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="MaterialTextBoxPlaceholder" TargetType="{x:Type TextBox}">
        <Grid>
            <TextBlock
                x:Name="wm"
                Margin="10,0"
                VerticalAlignment="Center"
                FontSize="13"
                Foreground="{DynamicResource ThemeForegroundSecondary}"
                Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" />
            <TextBox Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{StaticResource ThemeBackground}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">

                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MaterialExpander" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
    </Style>

    <Style x:Key="MaterialComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                            <Setter Property="Focusable" Value="True" />
                            <Setter Property="Foreground" Value="Green" />
                            <Setter Property="Visibility" Value="Hidden" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border
                                            x:Name="PART_ContentHost"
                                            HorizontalAlignment="Stretch"
                                            Background="{TemplateBinding Background}"
                                            Focusable="False" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="MinHeight" Value="25" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border
                                            Name="Border"
                                            Padding="8"
                                            VerticalAlignment="Stretch"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsHighlighted" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeInteractiveHover}" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource ThemeInteractiveBorder}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Border
                                                x:Name="Border"
                                                Grid.ColumnSpan="2"
                                                Background="{DynamicResource ThemeBackground}"
                                                BorderBrush="{DynamicResource ThemeElementBorder}"
                                                BorderThickness="1"
                                                CornerRadius="0" />
                                            <Border
                                                Grid.Column="0"
                                                Margin="0"
                                                Background="{DynamicResource ThemeBackground}"
                                                BorderBrush="{DynamicResource ThemeElementBorder}"
                                                BorderThickness="1,1,1,1"
                                                CornerRadius="0" />
                                            <Path
                                                x:Name="Arrow"
                                                Grid.Column="1"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                                Fill="White" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#202020" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#202020" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="#202020" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#303030" />
                                                <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundSecondary}" />
                                                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ThemeForegroundSecondary}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="8"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="8"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{DynamicResource ThemeBackground}"
                                    BorderBrush="{DynamicResource ThemeElementBorder}"
                                    BorderThickness="1" />
                                <ScrollViewer Margin="1,3,-16,1" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundSecondary}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialCheckbox" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundSecondary}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            x:Name="checkboxIcon"
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource ThemeForeground}"
                            Style="{StaticResource MaterialIcon}"
                            Text="&#xEAB8;" />
                        <ContentPresenter
                            Grid.Column="1"
                            Margin="4,-1,0,0"
                            VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkboxIcon" Property="Text" Value="&#xEAB8;" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="checkboxIcon" Property="Text" Value="&#xEAB6;" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkboxIcon" Property="Foreground" Value="{DynamicResource ThemeForegroundSecondary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="TrackContainer"
                        Width="10"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="0"
                            Focusable="false"
                            IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Command="ScrollBar.PageDownCommand"
                                    Focusable="false"
                                    Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Command="ScrollBar.PageUpCommand"
                                    Focusable="false"
                                    Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Border
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{DynamicResource ThemeElement}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialScroll" TargetType="{x:Type ScrollViewer}">
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Style.Triggers>
            <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Hidden">
                <Setter Property="Margin" Value="0,0,-13,0" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style BasedOn="{StaticResource MaterialScrollBar}" TargetType="{x:Type ScrollBar}" />
            <Style BasedOn="{StaticResource MaterialThumb}" TargetType="{x:Type Thumb}" />
        </Style.Resources>
    </Style>

    <Style x:Key="MaterialListView" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Style.Resources>
            <Style BasedOn="{StaticResource MaterialScrollBar}" TargetType="{x:Type ScrollBar}" />
            <Style BasedOn="{StaticResource MaterialThumb}" TargetType="{x:Type Thumb}" />
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Grid
                                x:Name="GridViewCell"
                                Height="33"
                                Margin="2,0,0,0"
                                Background="{DynamicResource ThemeBackground}">
                                <GridViewRowPresenter VerticalAlignment="Center" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="GridViewCell" Property="Background" Value="{DynamicResource ThemeElementHover}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="GridViewCell" Property="Background" Value="{DynamicResource ThemeElementSelected}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid Background="{DynamicResource ThemeElement}">
                                <TextBlock
                                    x:Name="ContentHeader"
                                    Width="{TemplateBinding Width}"
                                    Padding="8"
                                    FontSize="13"
                                    Foreground="{StaticResource ThemeForeground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Left" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="FontSize" Value="12" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="MaterialProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource ThemeAccent}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="MaterialLoadingBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource ThemeElement}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Height" Value="3" />
        <Setter Property="IsIndeterminate" Value="True" />
    </Style>

</ResourceDictionary>