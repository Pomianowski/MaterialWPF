<!--
    This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
    If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
    Copyright (C) Leszek Pomianowski and MaterialWPF Contributors.
    All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MaterialWPF.Controls">

    <!--  Icon  -->
    <Style TargetType="{x:Type controls:Icon}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Icon}">
                    <TextBlock
                        Margin="0"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        FontFamily="{StaticResource Micon}"
                        FontSize="{TemplateBinding FontSize}"
                        Foreground="{TemplateBinding Foreground}"
                        Text="{TemplateBinding RawGlyph}"
                        TextAlignment="Center"
                        TextOptions.TextFormattingMode="Ideal" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Hyperlink  -->
    <Style TargetType="{x:Type controls:Hyperlink}">
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeHyperlink}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Hyperlink}">
                    <Border
                        x:Name="HyperlinkBorder"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <TextBlock
                            x:Name="HyperlinkText"
                            FontSize="{TemplateBinding FontSize}"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center"
                            TextDecorations="Underline" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HyperlinkBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="HyperlinkBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="HyperlinkText" Property="Foreground" Value="{StaticResource ThemeForegroundSecondary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Material Button  -->
    <Style TargetType="{x:Type controls:MaterialButton}">
        <Setter Property="Padding" Value="16,8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource ThemeInteractive}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeInteractiveBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MaterialButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Orientation="Horizontal">
                            <TextBlock
                                Margin="0,0,12,0"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                FontFamily="{StaticResource Micon}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding RawGlyph}"
                                TextAlignment="Center"
                                TextOptions.TextFormattingMode="Ideal" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThemeInteractiveHover}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ThemeInteractiveBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ThemeInteractiveDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Toggle Button  -->
    <Style TargetType="{x:Type controls:ToggleButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeAccent}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <Border
                            x:Name="toggleBorder"
                            Width="40"
                            Height="20"
                            Padding="2,0,2,0"
                            Background="{DynamicResource ThemeInteractive}"
                            BorderBrush="{DynamicResource ThemeInteractiveBorder}"
                            BorderThickness="1"
                            CornerRadius="10">
                            <Ellipse
                                x:Name="toggleEllipse"
                                Width="16"
                                Height="16"
                                Margin="-18,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Foreground}"
                                Opacity=".6" />
                        </Border>
                        <ContentPresenter
                            x:Name="toggleContent"
                            Grid.Row="0"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextBlock.Foreground="{DynamicResource ThemeForeground}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="toggleBorder" Property="Background" Value="{DynamicResource ThemeIneractiveSelected}" />
                            <Setter TargetName="toggleEllipse" Property="Opacity" Value="1" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="toggleEllipse"
                                            Storyboard.TargetProperty="Margin">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="-18,0,0,0" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:.2" Value="18,0,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="toggleEllipse"
                                            Storyboard.TargetProperty="Margin">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="18,0,0,0" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:.2" Value="-18,0,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="toggleContent" Property="TextBlock.Foreground" Value="{DynamicResource ThemeForegroundSecondary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Message Box  -->
    <Style TargetType="{x:Type controls:MessageBox}">
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="MaxWidth" Value="400" />
        <Setter Property="MaxHeight" Value="250" />
        <Setter Property="MinWidth" Value="250" />
        <Setter Property="MinHeight" Value="150" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="0"
                    CornerRadius="0"
                    GlassFrameThickness="0"
                    ResizeBorderThickness="6"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MessageBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ThemeElementBorder}"
                        BorderThickness="2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <controls:WindowNavigation ShowMaximize="False" ShowMinimize="False" />
                            <TextBlock
                                Margin="12,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontWeight="Bold"
                                Text="{TemplateBinding Header}" />
                            <Grid Grid.Row="1" Margin="12,0,12,12">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Text="{TemplateBinding Message}"
                                    TextWrapping="WrapWithOverflow" />
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                                <Grid Grid.Row="2" Margin="0,8,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <controls:MaterialButton
                                        Grid.Column="0"
                                        Margin="0,0,4,0"
                                        Content="Cancel"
                                        Glyph="Cancel" />
                                    <controls:MaterialButton
                                        Grid.Column="1"
                                        Margin="4,0,0,0"
                                        Content="Confirm"
                                        Glyph="Accept" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Window Navigation  -->
    <Style x:Key="MaterialTitleBarButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        x:Name="LayoutRoot"
                        Width="44"
                        Height="30"
                        Background="{DynamicResource ThemeBackground}">
                        <TextBlock
                            x:Name="txt"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource Micon}"
                            FontSize="10"
                            Foreground="{DynamicResource ThemeForegroundSecondary}"
                            RenderOptions.ClearTypeHint="Auto"
                            Text="{TemplateBinding Content}"
                            TextOptions.TextFormattingMode="Display"
                            TextOptions.TextRenderingMode="Aliased" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ThemeElementHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MaterialButtonTitleBarMinimize"
        BasedOn="{StaticResource MaterialTitleBarButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEDBE;" />
    </Style>

    <Style
        x:Key="MaterialButtonTitleBarMaximize"
        BasedOn="{StaticResource MaterialTitleBarButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEADE;" />
    </Style>

    <Style
        x:Key="MaterialButtonTitleBarRestore"
        BasedOn="{StaticResource MaterialTitleBarButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEAE2;" />
    </Style>

    <Style
        x:Key="MaterialButtonTitleBarClose"
        BasedOn="{StaticResource MaterialTitleBarButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEADA;" />
    </Style>

    <!--  Hamburger Navigation  -->
    <Style x:Key="MaterialNavigationImage" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="12,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
    </Style>

    <Style x:Key="MaterialNavigationHamburgerIcon" TargetType="{x:Type TextBlock}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="{StaticResource Micon}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style x:Key="MaterialNavigationHamburgerButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        x:Name="LayoutRoot"
                        Width="44"
                        Height="44"
                        Background="{DynamicResource ThemeNavigationButton}">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="{DynamicResource ThemeForeground}"
                            RenderOptions.ClearTypeHint="Auto"
                            Style="{StaticResource MaterialNavigationHamburgerIcon}"
                            Text="&#xEBD8;"
                            TextOptions.TextFormattingMode="Ideal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ThemeNavigationHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialNavigationItemButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundSecondary}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ThemeNavigationHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TreeList  -->
    <Style
        x:Key="MaterialTreeListTreeView"
        BasedOn="{StaticResource {x:Type TreeView}}"
        TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate ItemsSource="{Binding SubItems}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Task" />
                            <ColumnDefinition SharedSizeGroup="Toggle" />
                            <ColumnDefinition SharedSizeGroup="Toggle" />
                            <ColumnDefinition SharedSizeGroup="Duration" />
                            <ColumnDefinition SharedSizeGroup="Notes" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Task}" />
                        <TextBlock Grid.Column="3" Text="{Binding Duration}" />
                        <TextBlock Grid.Column="4" Text="{Binding Notes}" />
                    </Grid>

                    <!--  Level 1 template leaves space for 1 child "Toggle" level  -->
                    <HierarchicalDataTemplate.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding SubItems}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="Task" />
                                    <ColumnDefinition />
                                    <ColumnDefinition SharedSizeGroup="Toggle" />
                                    <ColumnDefinition SharedSizeGroup="Duration" />
                                    <ColumnDefinition SharedSizeGroup="Notes" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Task}" />
                                <TextBlock Grid.Column="3" Text="{Binding Duration}" />
                                <TextBlock Grid.Column="4" Text="{Binding Notes}" />
                            </Grid>

                            <!--  Level 2 template has no children  -->
                            <HierarchicalDataTemplate.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding SubItems}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Task" />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition SharedSizeGroup="Duration" />
                                            <ColumnDefinition SharedSizeGroup="Notes" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Task}" />
                                        <TextBlock Grid.Column="3" Text="{Binding Duration}" />
                                        <TextBlock Grid.Column="4" Text="{Binding Notes}" />
                                    </Grid>
                                </HierarchicalDataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style
        x:Key="MaterialTreeListTreeViewItem"
        BasedOn="{StaticResource {x:Type TreeViewItem}}"
        TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="{DynamicResource ThemeElement}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
    </Style>

</ResourceDictionary>