<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MaterialWPF.Controls">

    <!--  Window Navigation  -->
    <Style x:Key="CaptionButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        x:Name="LayoutRoot"
                        Width="44"
                        Height="30"
                        Background="{StaticResource ThemeColor}">
                        <TextBlock
                            x:Name="txt"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource Micon}"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="#999999"
                            RenderOptions.ClearTypeHint="Auto"
                            Text="{TemplateBinding Content}"
                            TextOptions.TextFormattingMode="Display"
                            TextOptions.TextRenderingMode="Aliased" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource ThemeElementHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MinimizeButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEDBE;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="MaximizeButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEADE;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="RestoreButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEAE2;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="CloseButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEADA;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <!--  Navigation  -->
    <Style x:Key="NavIcon" TargetType="{x:Type TextBlock}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="{StaticResource Micon}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style x:Key="NavButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource ThemeElementSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavImage" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="12,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        <!--<Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, ElementName=navigationButton, PresentationTraceSources.TraceLevel=High}" Value="True" />
                    <Condition Binding="{Binding Width, ElementName=navigationList, PresentationTraceSources.TraceLevel=High, UpdateSourceTrigger=PropertyChanged}" Value="44" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="OUT" />
                    <BeginStoryboard Name="IN">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="Margin">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="12,0,0,0" />
                                <SplineThicknessKeyFrame KeyTime="00:00:0.4" Value="-200,0,0,0" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, ElementName=navigationButton}" Value="True" />
                    <Condition Binding="{Binding ActualWidth, ElementName=navigationList}" Value="250" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="IN" />
                    <BeginStoryboard Name="OUT">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="Margin">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="-200,0,0,0" />
                                <SplineThicknessKeyFrame KeyTime="00:00:0.4" Value="12,0,0,0" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
        </Style.Triggers>-->
    </Style>

    <!--<Style x:Key="NavExpander" TargetType="{x:Type ItemsControl}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, ElementName=navigationButton, PresentationTraceSources.TraceLevel=High}" Value="True" />
                    <Condition Binding="{Binding Width, ElementName=navigationList, PresentationTraceSources.TraceLevel=High, UpdateSourceTrigger=PropertyChanged}" Value="44" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="OUT" />
                    <BeginStoryboard Name="IN">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Width"
                                To="250"
                                Duration="0:00:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseInOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, ElementName=navigationButton}" Value="True" />
                    <Condition Binding="{Binding ActualWidth, ElementName=navigationList}" Value="250" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="IN" />
                    <BeginStoryboard Name="OUT">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Width"
                                To="44"
                                Duration="0:00:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseInOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="NavHamburger" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        x:Name="LayoutRoot"
                        Width="44"
                        Height="44"
                        Background="Transparent">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="{StaticResource ThemeForeground}"
                            RenderOptions.ClearTypeHint="Auto"
                            Style="{StaticResource NavIcon}"
                            Text="&#xEBD8;"
                            TextOptions.TextFormattingMode="Ideal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource ThemeElementSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TreeList  -->
    <Style
        x:Key="MaterialTreeListTreeView"
        BasedOn="{StaticResource {x:Type TreeView}}"
        TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ThemeForeground}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate ItemsSource="{Binding SubItems}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Task" />
                            <ColumnDefinition SharedSizeGroup="Toggle" />
                            <ColumnDefinition SharedSizeGroup="Toggle" />
                            <ColumnDefinition SharedSizeGroup="Duration" />
                            <ColumnDefinition SharedSizeGroup="Notes" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Task}" />
                        <TextBlock Grid.Column="3" Text="{Binding Duration}" />
                        <TextBlock Grid.Column="4" Text="{Binding Notes}" />
                    </Grid>

                    <!--  Level 1 template leaves space for 1 child "Toggle" level  -->
                    <HierarchicalDataTemplate.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding SubItems}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="Task" />
                                    <ColumnDefinition />
                                    <ColumnDefinition SharedSizeGroup="Toggle" />
                                    <ColumnDefinition SharedSizeGroup="Duration" />
                                    <ColumnDefinition SharedSizeGroup="Notes" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Task}" />
                                <TextBlock Grid.Column="3" Text="{Binding Duration}" />
                                <TextBlock Grid.Column="4" Text="{Binding Notes}" />
                            </Grid>

                            <!--  Level 2 template has no children  -->
                            <HierarchicalDataTemplate.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding SubItems}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Task" />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition SharedSizeGroup="Duration" />
                                            <ColumnDefinition SharedSizeGroup="Notes" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Task}" />
                                        <TextBlock Grid.Column="3" Text="{Binding Duration}" />
                                        <TextBlock Grid.Column="4" Text="{Binding Notes}" />
                                    </Grid>
                                </HierarchicalDataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource ThemeForeground}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style
        x:Key="MaterialTreeListTreeViewItem"
        BasedOn="{StaticResource {x:Type TreeViewItem}}"
        TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="{StaticResource ThemeElement}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeForeground}" />
    </Style>

    <!--  Text  -->
    <Style x:Key="MaterialTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource ThemeColor}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeForeground}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorder}" />
        <Setter Property="Padding" Value="7" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource ThemeColor}" />
                <Setter Property="BorderBrush" Value="{StaticResource ThemeBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="MaterialTextBoxPlaceholder" TargetType="{x:Type TextBox}">
        <Grid>
            <TextBlock
                x:Name="wm"
                Margin="10,0"
                VerticalAlignment="Center"
                FontSize="13"
                Foreground="{StaticResource ThemeDarkForeground}"
                Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" />
            <TextBox Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{StaticResource ThemeColor}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">

                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


</ResourceDictionary>